diff -ruN -x __pycache__ -x obj -x '*~' -x tags -x TAGS netcdf-fortran-4.6.0.v2compat/nf_test4/CMakeLists.txt netcdf-fortran-4.6.0/nf_test4/CMakeLists.txt
--- netcdf-fortran-4.6.0.v2compat/nf_test4/CMakeLists.txt	2023-02-20 16:54:35.300750687 +0100
+++ netcdf-fortran-4.6.0/nf_test4/CMakeLists.txt	2023-02-20 17:59:39.965748765 +0100
@@ -59,13 +59,6 @@
 
 endif(USE_NETCDF4)
 
-# If szip write capability exists in the C library, run the szip test.
-IF (HAVE_SZIP_WRITE)
-  SET(check_PROGRAMS ${check_PROGRAMS} ftst_var_szip)
-  SET(ftst_var_szip_SOURCES ftst_var_szip.F)
-  SET(TESTS ${TESTS} ftst_var_szip)
-ENDIF()
-
 # Create pre-compiled tests.
 FOREACH(t ${TESTS})
   ADD_EXECUTABLE(${t} ${${t}_SOURCES})
diff -ruN -x __pycache__ -x obj -x '*~' -x tags -x TAGS netcdf-fortran-4.6.0.v2compat/nf_test4/ftst_var_szip.F netcdf-fortran-4.6.0/nf_test4/ftst_var_szip.F
--- netcdf-fortran-4.6.0.v2compat/nf_test4/ftst_var_szip.F	2023-02-20 16:54:35.303750700 +0100
+++ netcdf-fortran-4.6.0/nf_test4/ftst_var_szip.F	2023-02-20 16:55:22.571967616 +0100
@@ -56,51 +56,62 @@
 
 C     Create the netCDF file.
       retval = nf_create(FILE_NAME, NF_NETCDF4, ncid)
+      print *,'create finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
 C     Create a dimension.
       retval = nf_def_dim(ncid, dim_name, DIM_LEN, dimids(1))
+      print *,'def_dim finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
 C     Create a few integer variables.
       do x = 1, NVARS      
          retval = nf_def_var(ncid, var_name(x), NF_INT, NDIMS, dimids,
      $        varid(x))
+         print *,'def_var finished with ',retval
          if (retval .ne. nf_noerr) stop 1
       end do
 
 C     Set an alternative fill value for the third variable.
       retval = nf_def_var_fill(ncid, varid(3), 0, MY_FILL_VALUE)
+      print *,'def_var_fill finished with ',retval
       if (retval .ne. 0) stop 3
 
 C     Turn on szip compression for var 1.
       retval = nf_def_var_szip(ncid, varid(1),
      $     nf_szip_ec_option_mask, 4)
+      print *,'def_var_szip finished with ',retval
       if (retval .ne. 0) stop 3
 
 C     Turn on szip compression for var 3.
       retval = nf_def_var_szip(ncid, varid(3),
      $     nf_szip_nn_option_mask, 4)
+      print *,'def_var_szip 2 finished with ',retval
       if (retval .ne. 0) stop 3
 
 C     Write some data.
       retval = nf_put_var_int(ncid, varid(1), data1)
+      print *,'put_var finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
 C     Close the file.
       retval = nf_close(ncid)
+      print *,'close finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
 C     Reopen the file.
       retval = nf_open(FILE_NAME, NF_NOWRITE, ncid)
+      print *,'open finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
 C     Check it out. 
       retval = check_file(ncid, var_name, dim_name)
+      print *,'check_file finished with ',retval
       if (retval .ne. 0) stop 4
 
 C     Close the file. 
       retval = nf_close(ncid)
+      print *,'close finished with ',retval
       if (retval .ne. nf_noerr) stop 1
 
       print *,'*** SUCCESS!'
